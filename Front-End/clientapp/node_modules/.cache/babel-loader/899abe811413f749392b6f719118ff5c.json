{"ast":null,"code":"var _jsxFileName = \"/Users/michaelschindezow/projects/VacationRequest/Front-End/clientapp/src/pages/userList/UserList.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./userList.css\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport { DeleteOutline } from '@mui/icons-material';\nimport { Tooltip } from \"@material-ui/core\";\nimport { userRows } from \"../../dummyData\";\nimport service from \"../../services/UserService\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserList() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    service.getUsers().then(users => {\n      setData(users);\n    });\n  }, []); //Delete Funktion for the User State\n\n  const handleDelete = id => {\n    setData(data.filter(item => item.id !== id));\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'user',\n    headerName: 'User',\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userListUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"userListImg\",\n          src: params.row.avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), params.row.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    width: 200\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 120\n  }, {\n    field: 'transaction',\n    headerName: 'Transaction Volume',\n    width: 160\n  }, {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user/\" + params.row.id,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"UserListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Delete\",\n          children: /*#__PURE__*/_jsxDEV(DeleteOutline, {\n            className: \"UserListDelete\",\n            onClick: () => handleDelete(params.row.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data,\n      disableSelectionOnClick: true,\n      columns: columns,\n      pageSize: 8,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserList, \"FTfFkLfVdcj0Uk2EahF49AUIgmY=\");\n\n_c = UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/michaelschindezow/projects/VacationRequest/Front-End/clientapp/src/pages/userList/UserList.jsx"],"names":["DataGrid","DeleteOutline","Tooltip","userRows","service","Link","useState","useEffect","UserList","data","setData","getUsers","then","users","handleDelete","id","filter","item","columns","field","headerName","width","renderCell","params","row","avatar","username"],"mappings":"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","sourcesContent":["import \"./userList.css\"\nimport { DataGrid } from '@mui/x-data-grid';\nimport { DeleteOutline } from '@mui/icons-material';\nimport { Tooltip } from \"@material-ui/core\";\nimport { userRows } from \"../../dummyData\";\nimport service from \"../../services/UserService\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\n\nexport default function UserList() {\n  \n  const [data,setData] = useState([]);\n\n  useEffect(() => {\n  service.getUsers().then((users) => {\n    setData(users);\n  });\n  }, []);\n  \n  //Delete Funktion for the User State\n \n  const handleDelete = (id) => {\n    setData(data.filter((item)=>item.id !== id));\n  };\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        { field: 'user', headerName: 'User', width: 200, renderCell: (params)=>{\n          return (\n            <div className=\"userListUser\">\n              <img className=\"userListImg\" src={params.row.avatar} alt=\"\"/>\n              {params.row.username}\n            </div>\n          );\n        },\n       },\n        { field: 'email', headerName: 'Email', width: 200 },\n        {\n          field: 'status',\n          headerName: 'Status',\n          width: 120,\n        },\n        {\n          field: 'transaction',\n          headerName: 'Transaction Volume',\n          width: 160,\n        },\n        {\n          field:\"action\",\n          headerName:\"Action\",\n          width: 150,\n          renderCell: (params)=>{\n            return (\n              <>\n              <Link to={\"/user/\" +params.row.id}>\n              <button className=\"UserListEdit\">Edit</button>\n              </Link>\n              <Tooltip title=\"Delete\">\n              <DeleteOutline className=\"UserListDelete\" onClick={()=> handleDelete(params.row.id)}/>\n              </Tooltip>\n              </>\n            )\n          }\n        }\n      ];\n      \n    return (\n        <div className=\"userList\">\n          <DataGrid\n            rows={data} disableSelectionOnClick\n            columns={columns}\n            pageSize={8} checkboxSelection\n          />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}