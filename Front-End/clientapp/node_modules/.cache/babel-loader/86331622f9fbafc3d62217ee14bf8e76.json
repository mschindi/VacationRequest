{"ast":null,"code":"var _jsxFileName = \"/Users/michaelschindezow/projects/VacationRequest/Front-End/clientapp/src/pages/userList/UserList.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./userList.css\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport { DeleteOutline } from '@mui/icons-material';\nimport { Tooltip } from \"@material-ui/core\";\nimport userCRUDService from \"../../services/UserService\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect, createContext } from \"react\";\nimport User from \"../user/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserList() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // userCRUDService.getUsers().then((users) => {\n    //   setData(users);\n    // });\n    async function fetchData() {\n      const request = await userCRUDService.getUsers();\n      setUsers(request.data);\n    }\n\n    fetchData();\n  }, []); //Delete Funktion for the User State\n\n  const handleDelete = id => {\n    setUsers(users.filter(item => item.id !== id));\n    userCRUDService.deleteUser(id);\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'user',\n    headerName: 'User',\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userListUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"userListImg\",\n          src: params.row.avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), params.row.firstName, \" \", params.row.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    width: 200\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 120\n  }, {\n    field: 'address',\n    headerName: 'Address',\n    width: 160\n  }, {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user/\" + params.row.id,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"UserListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Delete\",\n          children: /*#__PURE__*/_jsxDEV(DeleteOutline, {\n            className: \"UserListDelete\",\n            onClick: () => handleDelete(params.row.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true);\n    }\n  }]; // User ID an eine andere Componente weitergeben\n\n  const userIdFromUserList = columns.id;\n  const UserIdContext = /*#__PURE__*/createContext(userIdFromUserList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userList\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: users,\n        disableSelectionOnClick: true,\n        columns: columns,\n        pageSize: 8,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UserIdContext.Provider, {\n      value: userIdFromUserList.id,\n      children: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserList, \"SjRE+Wh7WTq/CnqUH4T+/qSC3y8=\");\n\n_c = UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/michaelschindezow/projects/VacationRequest/Front-End/clientapp/src/pages/userList/UserList.jsx"],"names":["DataGrid","DeleteOutline","Tooltip","userCRUDService","Link","useState","useEffect","createContext","User","UserList","users","setUsers","fetchData","request","getUsers","data","handleDelete","id","filter","item","deleteUser","columns","field","headerName","width","renderCell","params","row","avatar","firstName","lastName","userIdFromUserList","UserIdContext"],"mappings":"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","sourcesContent":["import \"./userList.css\"\nimport { DataGrid } from '@mui/x-data-grid';\nimport { DeleteOutline } from '@mui/icons-material';\nimport { Tooltip } from \"@material-ui/core\";\nimport userCRUDService from \"../../services/UserService\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect, createContext } from \"react\";\nimport User from \"../user/User\"\n\n\nexport default function UserList() {\n\n  const [users,setUsers] = useState([]);\n\n  useEffect(() => {\n    // userCRUDService.getUsers().then((users) => {\n    //   setData(users);\n    // });\n    async function fetchData() {\n      const request = await userCRUDService.getUsers();\n      setUsers(request.data);\n  }\n  fetchData();\n\n  }, []);\n\n  \n  //Delete Funktion for the User State\n \n  const handleDelete = (id) => {\n    setUsers(users.filter((item)=>item.id !== id));\n    userCRUDService.deleteUser(id);\n  };\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        { field: 'user', headerName: 'User', width: 200, renderCell: (params)=>{\n          return (\n            <div className=\"userListUser\">\n              <img className=\"userListImg\" src={params.row.avatar} alt=\"\"/>\n              {params.row.firstName} {params.row.lastName}\n            </div>\n          );\n        },\n       },\n        { field: 'email', headerName: 'Email', width: 200 },\n        {\n          field: 'status',\n          headerName: 'Status',\n          width: 120,\n        },\n        {\n          field: 'address',\n          headerName: 'Address',\n          width: 160,\n        },\n        {\n          field:\"action\",\n          headerName:\"Action\",\n          width: 150,\n          renderCell: (params)=>{\n            return (\n              <>\n              <Link to={\"/user/\" +params.row.id}>\n              <button className=\"UserListEdit\">Edit</button>\n              </Link>\n              <Tooltip title=\"Delete\">\n              <DeleteOutline className=\"UserListDelete\" onClick={()=> handleDelete(params.row.id)}/>\n              </Tooltip>\n              </>\n            )\n          }\n        }\n      ];\n\n      // User ID an eine andere Componente weitergeben\n  const userIdFromUserList = columns.id;\n\n  const UserIdContext = createContext(userIdFromUserList);\n\n      \n    return (\n      <>\n        <div className=\"userList\">\n          <DataGrid\n            rows={users} disableSelectionOnClick\n            columns={columns}\n            pageSize={8} checkboxSelection\n          />\n        </div>\n\n        <UserIdContext.Provider value={userIdFromUserList.id}>\n            <User />\n        </UserIdContext.Provider>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}